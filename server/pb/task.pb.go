// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

//Generate golang: protoc --go_out=plugins=grpc:. task.proto
//Generate javascript messages:  protoc --plugin="protoc-gen-ts=../client/node_modules/ts-protoc-gen/bin/protoc-gen-ts" --js_out="import_style=commonjs,binary:../client/src/app/grpc" --ts_out="../client/src/app/grpc" task.proto
//Generate javascript client: protoc -I=. task.proto --js_out=import_style=commonjs:. --grpc-web_out=import_style=typescript,mode=grpcwebtext:.

package taskservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Task struct {
	Id                   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description          string               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	IsComplete           bool                 `protobuf:"varint,3,opt,name=isComplete,proto3" json:"isComplete,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Deleted              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=deleted,proto3" json:"deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Task) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Task) GetIsComplete() bool {
	if m != nil {
		return m.IsComplete
	}
	return false
}

func (m *Task) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Task) GetDeleted() *timestamp.Timestamp {
	if m != nil {
		return m.Deleted
	}
	return nil
}

type UpdateTaskRequest struct {
	Tasks                []*Task  `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskRequest) Reset()         { *m = UpdateTaskRequest{} }
func (m *UpdateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskRequest) ProtoMessage()    {}
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{1}
}

func (m *UpdateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskRequest.Unmarshal(m, b)
}
func (m *UpdateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskRequest.Merge(m, src)
}
func (m *UpdateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskRequest.Size(m)
}
func (m *UpdateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskRequest proto.InternalMessageInfo

func (m *UpdateTaskRequest) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type GetTaskResponse struct {
	Tasks                []*Task  `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskResponse) Reset()         { *m = GetTaskResponse{} }
func (m *GetTaskResponse) String() string { return proto.CompactTextString(m) }
func (*GetTaskResponse) ProtoMessage()    {}
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{2}
}

func (m *GetTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskResponse.Unmarshal(m, b)
}
func (m *GetTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskResponse.Marshal(b, m, deterministic)
}
func (m *GetTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskResponse.Merge(m, src)
}
func (m *GetTaskResponse) XXX_Size() int {
	return xxx_messageInfo_GetTaskResponse.Size(m)
}
func (m *GetTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskResponse proto.InternalMessageInfo

func (m *GetTaskResponse) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type GetTasksSinceRequest struct {
	LastUpdated          *timestamp.Timestamp `protobuf:"bytes,1,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetTasksSinceRequest) Reset()         { *m = GetTasksSinceRequest{} }
func (m *GetTasksSinceRequest) String() string { return proto.CompactTextString(m) }
func (*GetTasksSinceRequest) ProtoMessage()    {}
func (*GetTasksSinceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{3}
}

func (m *GetTasksSinceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTasksSinceRequest.Unmarshal(m, b)
}
func (m *GetTasksSinceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTasksSinceRequest.Marshal(b, m, deterministic)
}
func (m *GetTasksSinceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTasksSinceRequest.Merge(m, src)
}
func (m *GetTasksSinceRequest) XXX_Size() int {
	return xxx_messageInfo_GetTasksSinceRequest.Size(m)
}
func (m *GetTasksSinceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTasksSinceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTasksSinceRequest proto.InternalMessageInfo

func (m *GetTasksSinceRequest) GetLastUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.LastUpdated
	}
	return nil
}

func init() {
	proto.RegisterType((*Task)(nil), "taskservice.Task")
	proto.RegisterType((*UpdateTaskRequest)(nil), "taskservice.UpdateTaskRequest")
	proto.RegisterType((*GetTaskResponse)(nil), "taskservice.GetTaskResponse")
	proto.RegisterType((*GetTasksSinceRequest)(nil), "taskservice.GetTasksSinceRequest")
}

func init() { proto.RegisterFile("task.proto", fileDescriptor_ce5d8dd45b4a91ff) }

var fileDescriptor_ce5d8dd45b4a91ff = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xcb, 0x4e, 0xeb, 0x30,
	0x10, 0x86, 0xeb, 0x5e, 0xce, 0x65, 0xac, 0x73, 0x50, 0x2d, 0x84, 0xa2, 0x80, 0x4a, 0xc8, 0x86,
	0xac, 0x52, 0x54, 0x58, 0xa1, 0x6e, 0x10, 0x42, 0xdd, 0xa7, 0xe5, 0x01, 0xd2, 0x78, 0xa8, 0xac,
	0x26, 0xb5, 0x89, 0x5d, 0x24, 0xde, 0x8f, 0x87, 0xe1, 0x31, 0x90, 0xe3, 0x46, 0xa4, 0xb4, 0x5c,
	0x76, 0xd6, 0xcc, 0xf7, 0xcf, 0xfc, 0xfe, 0x07, 0xc0, 0xa4, 0x7a, 0x19, 0xab, 0x52, 0x1a, 0xc9,
	0xa8, 0x7d, 0x6b, 0x2c, 0x9f, 0x44, 0x86, 0xfe, 0xe9, 0x42, 0xca, 0x45, 0x8e, 0xc3, 0xaa, 0x35,
	0x5f, 0x3f, 0x0c, 0x8d, 0x28, 0x50, 0x9b, 0xb4, 0x50, 0x8e, 0xf6, 0x8f, 0x3f, 0x02, 0x58, 0x28,
	0xf3, 0xec, 0x9a, 0xe1, 0x0b, 0x81, 0xee, 0x2c, 0xd5, 0x4b, 0xf6, 0x1f, 0xda, 0x82, 0x7b, 0x24,
	0x20, 0x51, 0x2f, 0x69, 0x0b, 0xce, 0x02, 0xa0, 0x1c, 0x75, 0x56, 0x0a, 0x65, 0x84, 0x5c, 0x79,
	0xed, 0x80, 0x44, 0x7f, 0x93, 0x66, 0x89, 0x0d, 0x00, 0x84, 0xbe, 0x95, 0x85, 0xca, 0xd1, 0xa0,
	0xd7, 0x09, 0x48, 0xf4, 0x27, 0x69, 0x54, 0xd8, 0x15, 0xfc, 0xce, 0x4a, 0x4c, 0x0d, 0x72, 0xaf,
	0x1b, 0x90, 0x88, 0x8e, 0xfc, 0xd8, 0x39, 0x89, 0x6b, 0x27, 0xf1, 0xac, 0xb6, 0x9a, 0xd4, 0xa8,
	0x55, 0x71, 0xb4, 0x7a, 0xee, 0xf5, 0xbe, 0x57, 0x6d, 0xd0, 0x70, 0x0c, 0xfd, 0x7b, 0xc5, 0x53,
	0x83, 0xf6, 0x2f, 0x09, 0x3e, 0xae, 0x51, 0x1b, 0x76, 0x0e, 0xbd, 0x2a, 0x28, 0x8f, 0x04, 0x9d,
	0x88, 0x8e, 0xfa, 0x71, 0x23, 0xb6, 0xb8, 0x02, 0x5d, 0x3f, 0xbc, 0x86, 0x83, 0x09, 0x1a, 0x27,
	0xd5, 0x4a, 0xae, 0x34, 0xfe, 0x5c, 0x3b, 0x83, 0xc3, 0x8d, 0x56, 0x4f, 0xc5, 0x2a, 0xc3, 0x7a,
	0xf9, 0x18, 0x68, 0x9e, 0x6a, 0xe3, 0x5c, 0xb9, 0x60, 0xbf, 0xfe, 0x4b, 0x13, 0x1f, 0xbd, 0x12,
	0xa0, 0x76, 0xe6, 0xd4, 0x6d, 0xb4, 0xd3, 0x26, 0x68, 0x6e, 0xf2, 0xbc, 0x5a, 0xc4, 0x8e, 0x76,
	0xe6, 0xdc, 0xd9, 0x9b, 0xfa, 0xbb, 0x36, 0xc3, 0xd6, 0x05, 0x61, 0x09, 0xfc, 0xdb, 0xf2, 0xc8,
	0xce, 0xb6, 0xb8, 0x7d, 0xfe, 0xfd, 0x93, 0x7d, 0x48, 0x1d, 0x4f, 0xd8, 0x62, 0x13, 0xa0, 0xef,
	0x89, 0x6b, 0x36, 0xd8, 0xc2, 0x77, 0x6e, 0xe1, 0x7f, 0xe2, 0x38, 0x6c, 0xcd, 0x7f, 0x55, 0x95,
	0xcb, 0xb7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3d, 0xc0, 0xe8, 0x69, 0xe1, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	GetAllTasks(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (TaskService_GetAllTasksClient, error)
	GetTasksSince(ctx context.Context, in *GetTasksSinceRequest, opts ...grpc.CallOption) (*GetTaskResponse, error)
	UpdateTasks(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) GetAllTasks(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (TaskService_GetAllTasksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TaskService_serviceDesc.Streams[0], "/taskservice.TaskService/GetAllTasks", opts...)
	if err != nil {
		return nil, err
	}
	x := &taskServiceGetAllTasksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TaskService_GetAllTasksClient interface {
	Recv() (*Task, error)
	grpc.ClientStream
}

type taskServiceGetAllTasksClient struct {
	grpc.ClientStream
}

func (x *taskServiceGetAllTasksClient) Recv() (*Task, error) {
	m := new(Task)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *taskServiceClient) GetTasksSince(ctx context.Context, in *GetTasksSinceRequest, opts ...grpc.CallOption) (*GetTaskResponse, error) {
	out := new(GetTaskResponse)
	err := c.cc.Invoke(ctx, "/taskservice.TaskService/GetTasksSince", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) UpdateTasks(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskservice.TaskService/UpdateTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	GetAllTasks(*empty.Empty, TaskService_GetAllTasksServer) error
	GetTasksSince(context.Context, *GetTasksSinceRequest) (*GetTaskResponse, error)
	UpdateTasks(context.Context, *UpdateTaskRequest) (*empty.Empty, error)
}

// UnimplementedTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServiceServer struct {
}

func (*UnimplementedTaskServiceServer) GetAllTasks(req *empty.Empty, srv TaskService_GetAllTasksServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAllTasks not implemented")
}
func (*UnimplementedTaskServiceServer) GetTasksSince(ctx context.Context, req *GetTasksSinceRequest) (*GetTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTasksSince not implemented")
}
func (*UnimplementedTaskServiceServer) UpdateTasks(ctx context.Context, req *UpdateTaskRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTasks not implemented")
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_GetAllTasks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TaskServiceServer).GetAllTasks(m, &taskServiceGetAllTasksServer{stream})
}

type TaskService_GetAllTasksServer interface {
	Send(*Task) error
	grpc.ServerStream
}

type taskServiceGetAllTasksServer struct {
	grpc.ServerStream
}

func (x *taskServiceGetAllTasksServer) Send(m *Task) error {
	return x.ServerStream.SendMsg(m)
}

func _TaskService_GetTasksSince_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTasksSinceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetTasksSince(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskservice.TaskService/GetTasksSince",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetTasksSince(ctx, req.(*GetTasksSinceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_UpdateTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).UpdateTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskservice.TaskService/UpdateTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).UpdateTasks(ctx, req.(*UpdateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "taskservice.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTasksSince",
			Handler:    _TaskService_GetTasksSince_Handler,
		},
		{
			MethodName: "UpdateTasks",
			Handler:    _TaskService_UpdateTasks_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAllTasks",
			Handler:       _TaskService_GetAllTasks_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "task.proto",
}
